# File generated by gflows, do not modify
# Source: .gflows/workflows/scan-code-net
name: Scan code
"on":
  push:
    branches:
    - master
    - main
    - F/*
    - f/*
    - R/*
    - r/*
    - B/*
    - b/*
jobs:
  version:
    runs-on: ubuntu-latest
    name: Get version from git tag
    outputs:
      app_version: ${{ steps.version.outputs.app_version }}
      file_version: ${{ steps.version.outputs.file_version }}
      information_version: ${{ steps.version.outputs.information_version }}
      issue_id_slug: ${{ steps.issue-key.outputs.issue_id_slug }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Checkout GitHub Action Repos
      uses: daspn/private-actions-checkout@v2
      with:
        actions_list: '[ "covergo/get-version@v1.4", "covergo/get-issue-key@v1.2", "covergo/docker-extract@v1", "covergo/docker-diagnose@v1.4", "covergo/set-compose-tags@v1", "covergo/run-in-compose@v1" ]'
        checkout_base_path: ./.github/actions
        app_id: ${{ secrets.PRIVATE_ACTION_APP_ID }}
        app_private_key: ${{ secrets.PRIVATE_ACTION_APP_PRIVATE_KEY }}
    - name: Get jira Ticket slug
      id: issue-key
      uses: ./.github/actions/get-issue-key
    - name: Get version from git tags
      id: version
      uses: ./.github/actions/get-version
      with:
        build-number: none
        pre-release-version: ${{ steps.issue-key.outputs.issue_id_slug }}
  analyse:
    name: Analyse
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
    - version
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/sonarcache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install dotnet 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5
        include-prerelease: false
    - name: Install dotnet 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_NAME: CoverGo_Auth
        SONAR_ORGANISATION_NAME: covergo
        VERSION: ${{ needs.version.outputs.app_version }}
        COVERLET_SETTINGS_FILE: coverlet.runsettings
        TEST_PROJECT_PATH: test/Test.My.Project.csproj
      run: |
        dotnet sonarscanner begin /k:$SONAR_PROJECT_NAME /o:$SONAR_ORGANISATION_NAME /d:sonar.login=$SONAR_TOKEN /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="TestResults/TestResults.trx"  /d:sonar.cs.opencover.reportsPaths="TestResults/*/coverage.opencover.xml" /v:$VERSION
        dotnet build -v q -nologo --configuration Release
        dotnet test $TEST_PROJECT_PATH --configuration Release --no-restore --no-build --results-directory:TestResults  --logger:"trx;LogFileName=TestResults.trx"  --settings $COVERLET_SETTINGS_FILE
        find . -name "*opencover*"
        echo there are two opencover files produces somehow, we need only one, and we delete the second
        find . -path "./TestResults/*/In" | xargs rm -rf
        dotnet sonarscanner end /d:sonar.login=$SONAR_TOKEN
